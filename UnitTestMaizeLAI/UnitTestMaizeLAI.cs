using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using SiriusQualityMaizeLAI;
using System.Collections.Generic;

namespace UnitTestMaizeLAI
{
    [TestClass]
    public class UnitTestMaizeLAI
    {
        #region Instantiation

        private SiriusQualityMaizeLAI.Strategies.MaizeLAI maizeLAI_;
        private SiriusQualityMaizeLAI.MaizeLAIState maizeLaistate_;
        private SiriusQualityMaizeLAI.MaizeLeafState maizeLeafstate_;
        private SiriusQualityMaizeLAI.MaizeLeafState maizeLeafstate1_;

        #endregion

        #region Parameter values

        internal double Nfinal = 16.0;//leaf, genotypic
        //Leaf Expansion Rate
        double LERa = 3.1899999;//mm/°Cd, genotypic
        double LERb = -1.1699990;//mm/°Cd/kPa, genotypic
        double LERc = 3.52;//mm/°Cd/MPa, genotypic
        double Beta = 0.68;//Dimensionless
        double Sigma = 0.46;//Dimensionless

        //Width
        double width6 = 41.0;//mm
        double betaW = 0.41;//Dimensionless
        double sigmaW = 0.69;//Dimensionless
        double radBase = 0.15;//MJ
        double SensiRad = 34;//mm/MJ

        //Width thermal time
        double lagStopWidthExpand = 39.0;//°Cd

        //Tip thermal time
        double atip = 51.0;//°Cd/leaf
        double btip = -49.0;//°Cd
        double Dse = 33.0;//°Cd

        //Start elongation Thermal Time
        double k_bl = 0.708;//Dimensionless
        double Nlim = 6.0;//leaf

        //End elongation Thermal Time
        double Lagmax = 5.4;//°Cd/leaf
        double Nlast = 2;//leaf

        //ligulation thermal time
        double k_ll = 0.454;//dimensionless
        double alpha_tr = 0.52;//dimensionless
        double a_ll1 = 86.0;//°Cd/leaf
        double b_ll1 = 137.0;//°Cd

        //floral initiation Thermal Tima
        double leafNoInitEmerg = 6.59;//leaf
        double LIR = 0.068;//initiation/°Cd
        double ttinitflo = 28.8777;//°Cd;

        //Leaf Area Index
        double plantDensity = 7.5;//plant/m²
        double SLNcri = 1.0;//g(N)/m²(leaf)


        #endregion

        [TestMethod]
        public void TestMethod1()
        {
            #region Instantiation

            maizeLAI_ = new SiriusQualityMaizeLAI.Strategies.MaizeLAI();
            maizeLaistate_ = new SiriusQualityMaizeLAI.MaizeLAIState();
            maizeLeafstate_ = new SiriusQualityMaizeLAI.MaizeLeafState();
            maizeLeafstate1_ = new SiriusQualityMaizeLAI.MaizeLeafState();

            #endregion

            #region Load Parameters

            maizeLAI_.Nfinal = Nfinal;
            maizeLAI_.width6 = width6;
            maizeLAI_.betaW = betaW;
            maizeLAI_.sigmaW = sigmaW;
            maizeLAI_.Lagmax = Lagmax;
            maizeLAI_.Nlast = Nlast;
            maizeLAI_.leafNoInitEmerg = leafNoInitEmerg;
            maizeLAI_.LIR = LIR;
            maizeLAI_.LERa = LERa;
            maizeLAI_.LERb = LERb;
            maizeLAI_.LERc = LERc;
            maizeLAI_.Beta = Beta;
            maizeLAI_.Sigma = Sigma;
            maizeLAI_.b_ll1 = b_ll1;
            maizeLAI_.k_ll = k_ll;
            maizeLAI_.a_ll1 = a_ll1;
            maizeLAI_.Dse = Dse;
            maizeLAI_.alpha_tr = alpha_tr;
            maizeLAI_.atip = atip;
            maizeLAI_.k_bl = k_bl;
            maizeLAI_.Nlim = Nlim;
            maizeLAI_.btip = btip;
            maizeLAI_.lagStopWidthExpand = lagStopWidthExpand;
            maizeLAI_.plantDensity = plantDensity;
            maizeLAI_.SensiRad = SensiRad;
            maizeLAI_.radBase = radBase;
            maizeLAI_.SLNcri = SLNcri;
            maizeLAI_.ttinitflo = ttinitflo;

            #endregion

            #region Inputs

            double[] leafNumber = new double[69];
           
            double[] FPAW = { 1.055291, 1.036655, 1.019251, 1.003788, 0.990684, 0.979964, 0.971430, 0.964670, 0.999054, 0.995531, 0.990854, 1.077381, 1.048832, 1.150511, 1.122261, 1.072008, 1.052564, 1.033450, 1.015410, 0.998859, 0.984495, 0.972277, 0.962721, 0.954297, 0.980231, 0.966751, 0.957593, 0.951503, 0.945754, 0.982698, 0.952836, 0.945331, 0.940523, 0.956832, 0.933513, 0.912575, 0.934135, 0.896799, 0.934001, 0.893513, 0.946184, 0.896785, 0.875172, 0.974340, 0.935503, 0.988233, 0.936888, 1.010037, 0.963656, 0.921145, 0.994110, 0.950785, 1.047017, 1.005780, 1.022232, 0.966633, 0.929411, 1.011959, 0.989928, 1.043282, 0.999262, 1.060455, 1.002305, 0.951366, 1.049265, 1.027700, 1.135172, 1.109370, 1.158929, 1.096023, 1.037513, 1.091849, 1.030402, 1.096239, 1.039929, 1.065811, 1.021687, 1.022922, 1.104766, 1.066286, 1.122209, 1.050555, 1.088576 };

            double[] VPDairCanopy = { 6.889954, 7.578266, 8.407633, 9.577369, 9.127844, 7.578550, 8.831484, 10.971215, 8.737927, 5.882144, 5.437460, 5.495472, 7.330120, 5.024862, 6.229059, 7.475600, 6.841527, 7.515523, 8.309527, 9.512993, 9.038382, 7.486887, 8.724538, 10.855646, 8.597306, 8.533481, 5.808266, 6.505992, 7.732205, 7.308155, 5.817618, 4.601725, 8.455746, 8.043546, 12.385766, 8.488644, 7.021340, 8.394602, 8.940320, 10.160783, 10.936832, 7.787378, 9.094345, 8.031715, 12.206500, 11.382078, 6.552908, 7.691687, 8.883592, 7.851757, 10.669495, 7.964305, 7.120225, 9.069677, 8.509248, 7.805493, 5.607642, 6.345150, 5.066041, 6.172752, 7.204273, 8.937706, 7.430357, 7.046565, 9.479713, 5.948851, 6.219275, 9.189522, 9.088173 };

            double[] deltaTTPhenoMaize = { 9.689264, 9.909361, 12.032583, 11.355507, 11.210422, 11.749631, 11.075431, 13.124064, 13.948326, 15.050000, 10.395995, 8.444444, 7.166667, 10.315789, 8.861111, 9.700819, 9.689264, 9.909361, 12.032583, 11.355507, 11.210422, 11.749631, 11.075431, 13.124064, 13.948326, 15.050000, 12.944715, 12.750586, 14.350000, 12.369528, 11.809273, 12.358458, 12.950000, 14.289178, 14.466766, 16.502824, 14.129089, 12.672070, 14.109971, 17.350000, 15.489670, 14.479119, 13.854293, 14.118100, 14.000000, 18.949999, 16.401456, 13.236359, 14.012953, 12.922965, 13.636850, 15.829760, 14.050000, 14.100000, 12.711007, 12.339632, 12.664820, 12.400001, 12.131312, 11.857771, 12.403959, 12.886743, 13.455577, 13.519285, 12.659389, 12.137639, 12.849999, 12.477453, 13.205576 };

            List<List<double>> TCanopyHourly = new List<List<double>>();

            #region Valorize

                TCanopyHourly.Add(new List<double> { 14.614539, 14.461839, 14.362990, 14.299000, 14.257576, 14.545478, 15.319184, 15.814359, 16.162121, 16.503699, 17.102423, 17.978773, 18.704000, 19.230145, 20.033733, 20.602542, 20.767692, 20.389619, 19.521087, 17.990804, 16.647359, 15.777743, 15.214823, 14.850427 });
                TCanopyHourly.Add(new List<double> { 16.859265, 16.690499, 16.581382, 16.510831, 16.465217, 16.816185, 17.726751, 18.356216, 18.830841, 19.286756, 19.979664, 20.933807, 21.709441, 22.258189, 23.057246, 23.594986, 23.704776, 23.248904, 22.291262, 20.608247, 19.114297, 18.148456, 17.524016, 17.120292 });
                TCanopyHourly.Add(new List<double> { 14.882616, 14.669712, 14.532221, 14.443430, 14.386090, 14.814226, 15.862836, 16.523286, 16.983806, 17.445465, 18.198511, 19.350592, 20.413671, 21.293637, 22.436358, 23.246523, 23.485082, 22.951747, 21.746412, 19.633581, 17.737643, 16.513388, 15.722823, 15.212300 });
                TCanopyHourly.Add(new List<double> { 13.416826, 13.155783, 12.987398, 12.878781, 12.808719, 13.448688, 15.012088, 16.212634, 17.194155, 18.112490, 19.201290, 20.595731, 21.754183, 22.579867, 23.570001, 24.152711, 24.125124, 23.320447, 21.845799, 19.267731, 16.929612, 15.421595, 14.448918, 13.821520 });
                TCanopyHourly.Add(new List<double> { 14.747673, 14.510746, 14.358087, 14.259724, 14.196346, 14.746396, 16.018357, 16.910177, 17.595464, 18.259505, 19.175241, 20.447076, 21.572036, 22.459836, 23.559538, 24.285664, 24.410880, 23.744504, 22.409075, 20.080554, 17.946641, 16.571851, 15.686089, 15.115387 });
                TCanopyHourly.Add(new List<double> { 15.477389, 15.300717, 15.187004, 15.113814, 15.066705, 15.428980, 16.203318, 16.633461, 16.900225, 17.194095, 17.824009, 18.805431, 19.716396, 20.502781, 21.563107, 22.340100, 22.612589, 22.191546, 21.198000, 19.470147, 17.870483, 16.840960, 16.178350, 15.751879 });
                TCanopyHourly.Add(new List<double> { 17.072194, 16.861403, 16.725870, 16.638726, 16.582694, 17.092954, 18.194691, 18.956101, 19.537706, 20.109483, 20.951503, 22.099398, 23.097710, 23.887646, 24.891915, 25.559776, 25.684326, 25.090362, 23.907159, 21.855049, 19.936445, 18.702967, 17.909923, 17.400033 });
                TCanopyHourly.Add(new List<double> { 16.084129, 15.797112, 15.612752, 15.494330, 15.418264, 16.176442, 17.795753, 19.000329, 19.971157, 20.900515, 22.056483, 23.565059, 24.891052, 25.930951, 27.120174, 27.852087, 27.884032, 27.011848, 25.403505, 22.621650, 19.995995, 18.309703, 17.226630, 16.530967 });
                TCanopyHourly.Add(new List<double> { 19.259122, 19.052373, 18.919698, 18.834556, 18.779918, 19.228472, 20.095124, 20.560104, 20.842030, 21.169041, 21.877823, 22.999489, 24.100458, 25.109809, 26.379822, 27.310451, 27.638349, 27.136123, 25.979906, 23.985233, 22.085017, 20.865744, 20.083358, 19.581300 });
                TCanopyHourly.Add(new List<double> { 16.839025, 16.746718, 16.687535, 16.649590, 16.625262, 16.982480, 17.765177, 18.506711, 19.186653, 19.786773, 20.291169, 20.975102, 21.361290, 21.359036, 21.119992, 20.996104, 20.737431, 20.349416, 19.841766, 18.956159, 18.104079, 17.557792, 17.207550, 16.982996 });
                TCanopyHourly.Add(new List<double> { 14.115941, 14.031685, 13.977711, 13.943135, 13.920986, 14.236080, 14.803345, 15.235716, 15.562527, 15.823045, 16.056569, 16.587194, 16.944999, 17.052270, 17.044327, 17.218680, 17.275378, 17.163596, 16.844547, 16.054757, 15.273658, 14.773306, 14.452788, 14.247468 });
                TCanopyHourly.Add(new List<double> { 11.548735, 11.452468, 11.390849, 11.351409, 11.326164, 11.698795, 12.402081, 12.989398, 13.475772, 13.884399, 14.239232, 14.847746, 15.245932, 15.342667, 15.279752, 15.367585, 15.318714, 15.096800, 14.676152, 13.770878, 12.874774, 12.301220, 11.934111, 11.699136 });
                TCanopyHourly.Add(new List<double> { 14.654551, 14.484068, 14.375030, 14.305292, 14.260689, 14.911153, 16.003521, 16.793889, 17.357704, 17.792527, 18.194786, 18.903898, 19.553201, 19.983414, 20.285760, 20.732343, 20.940367, 20.789363, 20.186268, 18.601668, 17.008442, 15.989527, 15.337878, 14.921106 });
                TCanopyHourly.Add(new List<double> { 15.176127, 15.105933, 15.061071, 15.032399, 15.014073, 15.287831, 15.755118, 16.110683, 16.379566, 16.594843, 16.789330, 17.296889, 17.600165, 17.655941, 17.621961, 17.769386, 17.817776, 17.724675, 17.457909, 16.805663, 16.147385, 15.726678, 15.457800, 15.285956 });
                TCanopyHourly.Add(new List<double> { 14.847872, 14.715523, 14.630993, 14.577004, 14.542522, 15.041540, 15.751934, 16.145984, 16.324968, 16.413556, 16.533012, 17.058874, 17.585249, 17.994792, 18.386459, 18.985960, 19.401383, 19.490868, 19.141571, 17.928410, 16.682957, 15.887546, 15.379543, 15.055093 });
                TCanopyHourly.Add(new List<double> { 13.124588, 12.928107, 12.802695, 12.722645, 12.671550, 13.407341, 14.373197, 14.818657, 14.921175, 14.896670, 14.954239, 15.517491, 16.269343, 17.035503, 17.858927, 18.908625, 19.684712, 19.946238, 19.500382, 17.708962, 15.854109, 14.670278, 13.914687, 13.432414 });
                TCanopyHourly.Add(new List<double> { 14.602372, 14.449998, 14.352796, 14.290788, 14.251231, 14.839104, 15.670866, 16.154158, 16.399363, 16.542215, 16.714366, 17.295561, 17.891537, 18.372049, 18.831712, 19.482466, 19.918523, 19.984718, 19.558525, 18.165325, 16.722796, 15.802635, 15.215665, 14.841230 });
                TCanopyHourly.Add(new List<double> { 16.846505, 16.678083, 16.570698, 16.502230, 16.458576, 17.120237, 18.082357, 18.688941, 19.047623, 19.291594, 19.550095, 20.198229, 20.846536, 21.356095, 21.821353, 22.454044, 22.847743, 22.847841, 22.333378, 20.792741, 19.194029, 18.174794, 17.524971, 17.110661 });
                TCanopyHourly.Add(new List<double> { 14.867396, 14.654904, 14.519485, 14.433184, 14.378184, 15.207740, 16.347383, 16.996887, 17.314524, 17.493816, 17.721762, 18.405326, 19.210860, 19.962444, 20.717351, 21.647705, 22.275801, 22.381548, 21.791560, 19.855318, 17.833449, 16.545068, 15.724044, 15.200830 });
                TCanopyHourly.Add(new List<double> { 13.399253, 13.138687, 12.972701, 12.866964, 12.799607, 13.861583, 15.501382, 16.691002, 17.547308, 18.218616, 18.849431, 19.801439, 20.756120, 21.504048, 22.111640, 22.792846, 23.100433, 22.852890, 21.912128, 19.525604, 17.041009, 15.458464, 14.450417, 13.808293 });
                TCanopyHourly.Add(new List<double> { 14.732720, 14.496201, 14.345589, 14.249680, 14.188606, 15.138758, 16.506667, 17.396318, 17.950831, 18.347039, 18.755924, 19.567759, 20.450892, 21.216309, 21.926814, 22.763765, 23.261091, 23.212438, 22.457773, 20.301442, 18.042045, 16.603455, 15.687436, 15.104146 });
                TCanopyHourly.Add(new List<double> { 15.466989, 15.290603, 15.178316, 15.106836, 15.061331, 15.749472, 16.625296, 17.060577, 17.206560, 17.245876, 17.353949, 17.942987, 18.632113, 19.281485, 19.970601, 20.857682, 21.490939, 21.666416, 21.222997, 19.624719, 17.937236, 16.863091, 16.179333, 15.744070 });
                TCanopyHourly.Add(new List<double> { 17.060690, 16.850215, 16.716264, 16.631014, 16.576758, 17.423716, 18.607669, 19.351068, 19.790443, 20.093204, 20.420643, 21.165809, 21.963112, 22.649940, 23.305134, 24.102527, 24.595928, 24.592063, 23.940809, 22.027056, 20.010712, 18.727607, 17.911059, 17.391405 });
                TCanopyHourly.Add(new List<double> { 16.069706, 15.783087, 15.600714, 15.484671, 15.410833, 16.588077, 18.323581, 19.534611, 20.368121, 21.007287, 21.629161, 22.619013, 23.668699, 24.560252, 25.345970, 26.200218, 26.639543, 26.445182, 25.450072, 22.838501, 20.089606, 18.340780, 17.228111, 16.520160 });
                TCanopyHourly.Add(new List<double> { 19.249633, 19.043147, 18.911781, 18.828206, 18.775035, 19.582249, 20.584335, 21.064420, 21.204988, 21.225340, 21.335433, 21.969040, 22.767689, 23.574596, 24.449637, 25.517624, 26.285355, 26.509074, 25.996596, 24.128592, 22.146896, 20.886301, 20.084367, 19.574196 });
                TCanopyHourly.Add(new List<double> { 16.949163, 16.742713, 16.611382, 16.527837, 16.474691, 17.306710, 18.450684, 19.157534, 19.565296, 19.842390, 20.150587, 20.886390, 21.673391, 22.355704, 23.017167, 23.821841, 24.326186, 24.336770, 23.703546, 21.828973, 19.846734, 18.585896, 17.783878, 17.273701 });
                TCanopyHourly.Add(new List<double> { 18.818072, 18.695790, 18.618005, 18.568525, 18.537049, 19.016857, 19.620343, 19.922417, 20.027595, 20.061516, 20.144372, 20.669185, 21.166501, 21.557813, 21.973734, 22.584569, 23.016849, 23.130502, 22.815442, 21.708677, 20.534470, 19.787589, 19.312506, 19.010304 });
                TCanopyHourly.Add(new List<double> { 20.240339, 20.110025, 20.027130, 19.974398, 19.940853, 20.451608, 21.095289, 21.418752, 21.533060, 21.571681, 21.662237, 22.201306, 22.727553, 23.156092, 23.612375, 24.261246, 24.719487, 24.838280, 24.500755, 23.320708, 22.069424, 21.273515, 20.767241, 20.445197 });
                TCanopyHourly.Add(new List<double> { 15.164615, 14.916099, 14.758003, 14.657427, 14.593444, 15.587006, 16.937549, 17.749679, 18.197073, 18.490702, 18.832774, 19.639244, 20.578003, 21.459398, 22.337796, 23.349676, 23.998196, 24.042574, 23.295880, 21.037919, 18.652190, 17.134669, 16.169345, 15.555264 });
                TCanopyHourly.Add(new List<double> { 14.648175, 14.405675, 14.251386, 14.153221, 14.090763, 15.054593, 16.356635, 17.124490, 17.532465, 17.791890, 18.105188, 18.889913, 19.810091, 20.679891, 21.555345, 22.571181, 23.232022, 23.297540, 22.580902, 20.376553, 18.050041, 16.569995, 15.628389, 15.029321 });
                TCanopyHourly.Add(new List<double> { 17.695315, 17.544972, 17.449300, 17.388419, 17.349676, 17.921234, 18.594890, 18.860000, 18.865867, 18.790478, 18.803610, 19.326390, 19.933969, 20.518757, 21.179827, 22.053131, 22.705310, 22.941038, 22.605905, 21.244121, 19.803169, 18.886282, 18.302840, 17.931572 });
                TCanopyHourly.Add(new List<double> { 19.997316, 19.919122, 19.869351, 19.837671, 19.817507, 20.094166, 20.336532, 20.303732, 20.106791, 19.876302, 19.736423, 20.104197, 20.452338, 20.756517, 21.163823, 21.815122, 22.350636, 22.631270, 22.545473, 21.841321, 21.092812, 20.616402, 20.313171, 20.120165 });
                TCanopyHourly.Add(new List<double> { 18.272363, 18.057850, 17.921272, 17.834315, 17.778950, 18.630155, 19.844189, 20.620873, 21.095567, 21.433801, 21.794467, 22.571082, 23.386317, 24.081173, 24.741187, 25.528998, 26.002877, 25.971263, 25.286420, 23.326202, 21.275306, 19.969692, 19.138485, 18.609289 });
                TCanopyHourly.Add(new List<double> { 18.561751, 18.351232, 18.217152, 18.131756, 18.077367, 18.889485, 19.980790, 20.583911, 20.862888, 21.015787, 21.232188, 21.929889, 22.741300, 23.508382, 24.302318, 25.260062, 25.909134, 26.026344, 25.437347, 23.515024, 21.505736, 20.226176, 19.411279, 18.892289 });
                TCanopyHourly.Add(new List<double> { 18.071497, 17.748695, 17.543023, 17.411978, 17.328483, 18.618468, 20.602801, 22.017637, 23.019008, 23.801871, 24.554397, 25.663784, 26.839605, 27.843507, 28.716790, 29.621725, 30.055218, 29.782229, 28.624721, 25.656092, 22.580609, 20.621464, 19.373335, 18.578139 });
                TCanopyHourly.Add(new List<double> { 17.445437, 17.204833, 17.051464, 16.953701, 16.891383, 17.812839, 19.109318, 19.873290, 20.277991, 20.533803, 20.842509, 21.621533, 22.534928, 23.398428, 24.267117, 25.278745, 25.938381, 26.006498, 25.296649, 23.088560, 20.801649, 19.344092, 18.415066, 17.822898 });
                TCanopyHourly.Add(new List<double> { 16.468434, 16.255898, 16.120353, 16.033908, 15.978778, 16.771160, 17.837124, 18.384403, 18.591134, 18.671971, 18.832499, 19.499577, 20.322557, 21.135287, 21.997312, 23.040085, 23.772035, 23.953006, 23.394345, 21.443592, 19.428594, 18.143670, 17.324258, 16.801694 });
                TCanopyHourly.Add(new List<double> { 17.624629, 17.392007, 17.243570, 17.148852, 17.088412, 17.963870, 19.233670, 19.993785, 20.407923, 20.675533, 20.988262, 21.756634, 22.640405, 23.459029, 24.272247, 25.229604, 25.847625, 25.898339, 25.204246, 23.058729, 20.859228, 19.455909, 18.560515, 17.989187 });
                TCanopyHourly.Add(new List<double> { 21.998539, 21.811963, 21.692837, 21.616776, 21.568213, 22.254412, 23.227416, 23.762593, 24.006004, 24.134672, 24.318583, 24.965744, 25.690618, 26.351980, 27.032222, 27.888243, 28.472544, 28.585283, 28.069759, 26.346986, 24.588159, 23.465316, 22.748450, 22.290760 });
                TCanopyHourly.Add(new List<double> { 18.231789, 17.961003, 17.788000, 17.677469, 17.606850, 18.616935, 20.192560, 21.226117, 21.879691, 22.353421, 22.840515, 23.741176, 24.748392, 25.651282, 26.495554, 27.443763, 27.998415, 27.925366, 27.043758, 24.527516, 21.982919, 20.357447, 19.319032, 18.655626 });
                TCanopyHourly.Add(new List<double> { 15.776970, 15.454053, 15.247599, 15.115604, 15.031213, 16.242540, 18.267639, 19.729336, 20.776495, 21.597257, 22.374429, 23.484572, 24.659614, 25.647221, 26.481916, 27.350957, 27.751254, 27.453296, 26.282818, 23.264908, 20.240879, 18.307836, 17.072081, 16.282054 });
                TCanopyHourly.Add(new List<double> { 17.688977, 17.470304, 17.330393, 17.240875, 17.183599, 17.956060, 19.107197, 19.741359, 20.029227, 20.178563, 20.389570, 21.079108, 21.916463, 22.722956, 23.550730, 24.554720, 25.242887, 25.380070, 24.781205, 22.744810, 20.704887, 19.399860, 18.564934, 18.030751 });
                TCanopyHourly.Add(new List<double> { 17.090206, 16.835403, 16.672247, 16.567772, 16.500874, 17.412196, 18.919829, 19.921104, 20.563927, 21.032273, 21.504572, 22.369601, 23.319873, 24.147568, 24.902908, 25.771980, 26.273234, 26.189911, 25.354174, 22.963723, 20.596049, 19.080176, 18.109597, 17.488136 });
                TCanopyHourly.Add(new List<double> { 18.962594, 18.790007, 18.679401, 18.608518, 18.563091, 19.183968, 20.300707, 21.129841, 21.742232, 22.229051, 22.679568, 23.436656, 24.097789, 24.520970, 24.818675, 25.234341, 25.400804, 25.204185, 24.558337, 22.927961, 21.331124, 20.307863, 19.652126, 19.231899 });
                TCanopyHourly.Add(new List<double> { 21.827011, 21.560010, 21.388749, 21.278896, 21.208433, 22.129389, 23.716398, 24.767540, 25.438285, 25.922764, 26.409855, 27.292844, 28.280786, 29.157253, 29.960386, 30.877437, 31.411230, 31.332674, 30.463719, 27.941709, 25.481715, 23.904089, 22.892257, 22.243275 });
                TCanopyHourly.Add(new List<double> { 18.878244, 18.593202, 18.410198, 18.292704, 18.217269, 19.193375, 20.978504, 22.242294, 23.123444, 23.798233, 24.439163, 25.419007, 26.463729, 27.337339, 28.077187, 28.895949, 29.305706, 29.092267, 28.090861, 25.382920, 22.768926, 21.090963, 20.013772, 19.322224 });
                TCanopyHourly.Add(new List<double> { 18.342624, 18.178004, 18.072211, 18.004222, 17.960529, 18.486949, 19.341381, 19.780273, 19.941074, 19.992108, 20.096747, 20.652311, 21.298819, 21.888071, 22.490977, 23.306821, 23.890504, 24.051994, 23.639843, 22.084890, 20.582850, 19.617644, 18.997383, 18.598782 });
                TCanopyHourly.Add(new List<double> { 18.072940, 17.862119, 17.726498, 17.639252, 17.583126, 18.247932, 19.389005, 20.021602, 20.308353, 20.449832, 20.641341, 21.289089, 22.091438, 22.857732, 23.627934, 24.594950, 25.265463, 25.410654, 24.848521, 22.847184, 20.933184, 19.702044, 18.910100, 18.400658 });
                TCanopyHourly.Add(new List<double> { 15.065425, 14.786351, 14.606632, 14.490897, 14.416365, 15.304904, 17.048591, 18.261012, 19.084413, 19.700317, 20.287330, 21.216572, 22.241712, 23.113578, 23.857337, 24.703987, 25.154716, 24.989776, 24.038351, 21.360218, 18.839723, 17.216800, 16.171751, 15.498789 });
                TCanopyHourly.Add(new List<double> { 17.403575, 17.182656, 17.040233, 16.948415, 16.889222, 17.558813, 18.822327, 19.583601, 19.994692, 20.245579, 20.522440, 21.217229, 22.049111, 22.810943, 23.536810, 24.445034, 25.044679, 25.115291, 24.481783, 22.365737, 20.381454, 19.102365, 18.277812, 17.746255 });
                TCanopyHourly.Add(new List<double> { 18.375044, 18.093811, 17.912300, 17.795150, 17.719540, 18.565901, 20.327998, 21.543360, 22.357812, 22.958323, 23.529683, 24.444947, 25.473096, 26.359454, 27.119415, 27.992570, 28.470263, 28.326118, 27.383028, 24.665221, 22.153161, 20.532108, 19.485957, 18.810792 });
                TCanopyHourly.Add(new List<double> { 19.153377, 18.986608, 18.878846, 18.809215, 18.764220, 19.260471, 20.392340, 21.253358, 21.902744, 22.419963, 22.884646, 23.617853, 24.264064, 24.653748, 24.874746, 25.230781, 25.350409, 25.130471, 24.492236, 22.866472, 21.385758, 20.429053, 19.810893, 19.411468 });
                TCanopyHourly.Add(new List<double> { 18.982927, 18.806083, 18.691674, 18.617658, 18.569773, 18.757988, 19.340798, 19.522464, 19.540041, 19.639517, 20.182199, 21.178353, 22.220545, 23.243916, 24.571655, 25.597866, 26.045969, 25.675207, 24.670433, 22.902379, 21.341607, 20.331966, 19.678820, 19.256282 });
                TCanopyHourly.Add(new List<double> { 14.508617, 14.217258, 14.028532, 13.906286, 13.827101, 14.295533, 15.752260, 16.717126, 17.434979, 18.163281, 19.214950, 20.768295, 22.267574, 23.573814, 25.079167, 26.104876, 26.341226, 25.524110, 23.864139, 20.936135, 18.380298, 16.724995, 15.652864, 14.958426 });
                TCanopyHourly.Add(new List<double> { 14.376380, 14.097028, 13.915850, 13.798343, 13.722131, 14.125070, 15.471119, 16.321116, 16.927159, 17.554594, 18.524663, 20.018500, 21.486848, 22.789098, 24.316009, 25.383842, 25.676973, 24.926177, 23.330554, 20.509257, 18.074302, 16.495270, 15.471235, 14.807105 });
                TCanopyHourly.Add(new List<double> { 15.858263, 15.621050, 15.467000, 15.366958, 15.301989, 15.585556, 16.631647, 17.215170, 17.581370, 17.988268, 18.767576, 20.055779, 21.347719, 22.524447, 23.969474, 25.024663, 25.389287, 24.806219, 23.447774, 21.040229, 18.986053, 17.652193, 16.786023, 16.223540 });
                TCanopyHourly.Add(new List<double> { 19.235124, 19.146634, 19.089090, 19.051671, 19.027337, 19.163305, 19.665598, 20.034658, 20.328840, 20.610615, 21.134773, 21.711525, 22.045182, 22.189508, 22.573503, 22.815045, 22.835305, 22.568523, 22.060567, 21.158243, 20.397170, 19.902279, 19.580469, 19.371204 });
                TCanopyHourly.Add(new List<double> { 16.517908, 16.330870, 16.209078, 16.129771, 16.078129, 16.203792, 16.855190, 17.065503, 17.084408, 17.174740, 17.689855, 18.728129, 19.833477, 20.903602, 22.311045, 23.412837, 23.912452, 23.556003, 22.479034, 20.562055, 18.964135, 17.923716, 17.246265, 16.805146 });
                TCanopyHourly.Add(new List<double> { 17.746157, 17.619418, 17.536775, 17.482886, 17.447747, 17.467378, 17.751246, 17.670928, 17.445252, 17.304243, 17.605448, 18.347176, 19.153881, 19.969693, 21.158170, 22.140016, 22.662611, 22.508978, 21.777189, 20.472007, 19.396800, 18.695730, 18.238598, 17.940522 });
                TCanopyHourly.Add(new List<double> { 17.003629, 16.822546, 16.704299, 16.627085, 16.576665, 16.640632, 17.207724, 17.309385, 17.211162, 17.193890, 17.622523, 18.622528, 19.733048, 20.838358, 22.316637, 23.504481, 24.088055, 23.800567, 22.751691, 20.877628, 19.352103, 18.356031, 17.705636, 17.280945 });
                TCanopyHourly.Add(new List<double> { 16.703958, 16.488628, 16.347818, 16.255737, 16.195523, 16.309631, 17.172252, 17.547306, 17.695197, 17.893401, 18.483522, 19.651625, 20.884651, 22.043746, 23.543169, 24.701557, 25.201372, 24.776117, 23.524910, 21.285642, 19.484548, 18.306875, 17.536802, 17.033244 });
                TCanopyHourly.Add(new List<double> { 16.145690, 15.882016, 15.709339, 15.596255, 15.522198, 15.733599, 17.114747, 18.020494, 18.671941, 19.308080, 20.212185, 21.628729, 22.975033, 24.096044, 25.474340, 26.438202, 26.698373, 26.017573, 24.480385, 21.725231, 19.535707, 18.101992, 17.163138, 16.548318 });
                TCanopyHourly.Add(new List<double> { 17.590304, 17.380910, 17.243576, 17.153505, 17.094430, 17.167878, 18.039848, 18.434872, 18.601063, 18.804884, 19.374735, 20.512253, 21.696380, 22.785658, 24.224065, 25.337628, 25.820168, 25.418646, 24.194111, 21.996267, 20.270430, 19.138633, 18.396375, 17.909573 });
                TCanopyHourly.Add(new List<double> { 16.592036, 16.382609, 16.245047, 16.154690, 16.095338, 16.151951, 17.051207, 17.476243, 17.669400, 17.892115, 18.463748, 19.602161, 20.775196, 21.837117, 23.250649, 24.342641, 24.811523, 24.410419, 23.181663, 20.973621, 19.260481, 18.135312, 17.396287, 16.910874 });
                TCanopyHourly.Add(new List<double> { 14.105483, 13.823542, 13.638067, 13.516052, 13.435784, 13.680114, 15.597539, 17.167770, 18.496984, 19.706761, 20.958446, 22.514019, 23.726413, 24.472589, 25.323891, 25.751394, 25.560536, 24.616514, 22.956438, 19.970487, 17.681556, 16.175959, 15.185570, 14.534066 });
                TCanopyHourly.Add(new List<double> { 18.942347, 18.819435, 18.738452, 18.685094, 18.649938, 18.665229, 19.237783, 19.540950, 19.706038, 19.876199, 20.312518, 21.060863, 21.690660, 22.139786, 22.920634, 23.516358, 23.759726, 23.517004, 22.791053, 21.484097, 20.494056, 19.841786, 19.412039, 19.128898 });
                TCanopyHourly.Add(new List<double> { 18.008552, 17.863451, 17.767700, 17.704514, 17.662817, 17.671108, 18.381197, 18.782263, 19.020344, 19.255643, 19.744398, 20.600383, 21.346768, 21.893645, 22.774789, 23.439031, 23.697412, 23.400985, 22.540910, 20.991559, 19.831850, 19.066611, 18.561651, 18.228437 });
                TCanopyHourly.Add(new List<double> { 15.860325, 15.596299, 15.421795, 15.306459, 15.230229, 15.296813, 16.924642, 18.131812, 19.079146, 19.947806, 20.943897, 22.388853, 23.632948, 24.545382, 25.618288, 26.327442, 26.400065, 25.656254, 24.087634, 21.256471, 19.162547, 17.778759, 16.864226, 16.259802 });
                TCanopyHourly.Add(new List<double> { 14.452169, 14.157867, 13.963042, 13.834071, 13.748693, 13.762852, 15.513301, 16.755391, 17.692591, 18.553734, 19.550595, 21.124810, 22.561386, 23.716893, 25.024312, 25.938414, 26.121671, 25.349852, 23.599347, 20.431196, 18.115606, 16.582904, 15.568346, 14.896749 });
            
            #endregion

            List<List<double>> VPDeq = new List<List<double>>();

            #region Valorize

                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.032152, 0.175564, 0.413014, 0.453358, 0.493756, 0.566453, 0.677307, 0.773179, 0.845155, 0.959144, 0.656250, 0.216264, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.038734, 0.214555, 0.515372, 0.578980, 0.641656, 0.739945, 0.881466, 1.001980, 1.090308, 1.223618, 0.813650, 0.262839, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.052079, 0.293255, 0.487056, 0.542812, 0.600157, 0.696900, 0.852869, 1.005732, 1.139071, 1.321866, 1.273900, 0.412562, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.045724, 0.283706, 0.588903, 0.707426, 0.824313, 0.970765, 1.171469, 1.350068, 1.484280, 1.653157, 1.313671, 0.408170, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.054818, 0.313696, 0.551845, 0.637152, 0.722954, 0.846531, 1.028716, 1.200619, 1.343774, 1.530698, 1.363975, 0.426354, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.052864, 0.263674, 0.435488, 0.467807, 0.503970, 0.583506, 0.713061, 0.839700, 0.954172, 1.116402, 0.973025, 0.307725, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.059636, 0.317359, 0.585803, 0.666582, 0.748525, 0.873909, 1.054230, 1.220264, 1.357987, 1.541513, 1.225886, 0.375762, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.074095, 0.432144, 0.711076, 0.847691, 0.985374, 1.166506, 1.420270, 1.660564, 1.860962, 2.103693, 1.946065, 0.584012, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.087800, 0.427557, 0.574435, 0.616792, 0.666738, 0.778054, 0.963032, 1.155572, 1.342108, 1.591126, 1.625345, 0.500589, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000181, 0.002358, 0.007282, 0.014813, 0.023821, 0.032423, 0.040564, 0.043346, 0.039267, 0.030623, 0.021226, 0.011750, 0.004360, 0.000394, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.003255, 0.038059, 0.108531, 0.204909, 0.309630, 0.403945, 0.504869, 0.545506, 0.505125, 0.409086, 0.299859, 0.175355, 0.067941, 0.006079, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.002310, 0.027035, 0.079616, 0.155145, 0.240825, 0.320255, 0.400300, 0.431502, 0.397318, 0.318137, 0.228257, 0.130405, 0.049272, 0.004156, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.009865, 0.121002, 0.361916, 0.598200, 0.653300, 0.705465, 0.800280, 0.890380, 0.951855, 0.995924, 1.062348, 0.716015, 0.274719, 0.022112, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.003328, 0.033622, 0.092443, 0.171061, 0.255060, 0.329391, 0.411629, 0.440222, 0.402331, 0.322698, 0.234704, 0.136089, 0.051958, 0.004114, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.011719, 0.122257, 0.333477, 0.445235, 0.455730, 0.469967, 0.533792, 0.599573, 0.652093, 0.703442, 0.784207, 0.616659, 0.242695, 0.018467, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.020063, 0.215268, 0.439618, 0.450781, 0.448099, 0.454386, 0.517032, 0.603807, 0.696064, 0.799689, 0.938791, 1.046892, 0.512908, 0.037372, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.014124, 0.143721, 0.395469, 0.481338, 0.498360, 0.519057, 0.590422, 0.666027, 0.728820, 0.790459, 0.880413, 0.750318, 0.291122, 0.020247, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.017249, 0.176325, 0.494580, 0.608590, 0.642329, 0.678572, 0.771719, 0.868215, 0.946455, 1.019784, 1.122465, 0.946193, 0.361865, 0.023977, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.023523, 0.243807, 0.544425, 0.583748, 0.606249, 0.635183, 0.724175, 0.833421, 0.939769, 1.051035, 1.194524, 1.295511, 0.558781, 0.035594, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.020372, 0.228913, 0.645863, 0.751678, 0.838207, 0.922478, 1.055287, 1.195536, 1.310559, 1.407448, 1.519866, 1.497839, 0.553164, 0.032914, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.024301, 0.254320, 0.612033, 0.682683, 0.734500, 0.789172, 0.901419, 1.029278, 1.145133, 1.257014, 1.394355, 1.478897, 0.586504, 0.034236, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.023023, 0.213656, 0.487476, 0.505523, 0.510404, 0.523889, 0.598839, 0.689669, 0.778454, 0.876172, 1.007448, 1.105070, 0.433603, 0.025158, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.026284, 0.257149, 0.640386, 0.702492, 0.746156, 0.794193, 0.906734, 1.032234, 1.144703, 1.255874, 1.396452, 1.452331, 0.545582, 0.030091, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.032133, 0.342884, 0.785373, 0.905661, 1.001639, 1.098237, 1.258767, 1.438452, 1.599047, 1.746904, 1.914633, 2.003812, 0.826577, 0.043315, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.037708, 0.344821, 0.650678, 0.672291, 0.675426, 0.692486, 0.792683, 0.923894, 1.062214, 1.218994, 1.420299, 1.572042, 0.727411, 0.038676, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.027138, 0.255388, 0.623740, 0.680725, 0.720174, 0.764756, 0.874250, 0.996257, 1.106266, 1.216786, 1.356544, 1.402755, 0.524377, 0.026845, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.019353, 0.159468, 0.409427, 0.519247, 0.524162, 0.536213, 0.613840, 0.689452, 0.750381, 0.816556, 0.916437, 0.682292, 0.259293, 0.013386, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.022800, 0.188531, 0.485408, 0.579370, 0.585439, 0.599727, 0.686254, 0.773150, 0.845723, 0.924820, 1.040618, 0.823465, 0.312580, 0.015869, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.032641, 0.314117, 0.620523, 0.678472, 0.717285, 0.763298, 0.875254, 1.011901, 1.146645, 1.287403, 1.457897, 1.572050, 0.704355, 0.034291, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.031346, 0.298423, 0.587120, 0.638114, 0.671142, 0.711666, 0.816294, 0.944836, 1.072381, 1.206931, 1.371152, 1.482836, 0.662811, 0.032104, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.026381, 0.218070, 0.488636, 0.489427, 0.479186, 0.480961, 0.552858, 0.639029, 0.724691, 0.824836, 0.962688, 1.017522, 0.392133, 0.019564, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.018961, 0.138063, 0.319488, 0.375990, 0.342650, 0.322618, 0.375604, 0.426742, 0.472216, 0.534285, 0.636395, 0.481406, 0.190388, 0.009831, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.030174, 0.282866, 0.696483, 0.768417, 0.820800, 0.877713, 1.004050, 1.142384, 1.265072, 1.385815, 1.535475, 1.563773, 0.579154, 0.028107, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.034650, 0.316886, 0.657721, 0.699686, 0.722951, 0.756212, 0.866127, 0.999203, 1.130375, 1.271829, 1.450460, 1.576667, 0.657186, 0.032545, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.042098, 0.453075, 0.967677, 1.133503, 1.269393, 1.405386, 1.615853, 1.852491, 2.066115, 2.261010, 2.472227, 2.576853, 1.127010, 0.054377, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.035657, 0.344048, 0.683291, 0.742081, 0.779909, 0.826262, 0.946720, 1.094490, 1.240924, 1.395110, 1.583713, 1.712133, 0.768640, 0.038884, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.031683, 0.294437, 0.569474, 0.597013, 0.607863, 0.629560, 0.721810, 0.840327, 0.962653, 1.098359, 1.271062, 1.398099, 0.634869, 0.033192, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.033022, 0.323180, 0.679649, 0.740219, 0.780083, 0.827405, 0.947113, 1.091006, 1.230439, 1.375028, 1.553306, 1.673190, 0.720305, 0.038098, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.034346, 0.318450, 0.743997, 0.787304, 0.810417, 0.843730, 0.963550, 1.102632, 1.234154, 1.374176, 1.557436, 1.682793, 0.641165, 0.035317, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.035833, 0.380351, 0.810381, 0.913183, 0.989966, 1.070957, 1.226324, 1.408996, 1.581092, 1.749447, 1.947429, 2.067755, 0.921805, 0.050915, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.032215, 0.375536, 0.850967, 1.004581, 1.131183, 1.256289, 1.444185, 1.655386, 1.843180, 2.009549, 2.190506, 2.276600, 1.000614, 0.055955, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.030375, 0.307207, 0.632789, 0.674176, 0.695898, 0.726897, 0.830705, 0.962041, 1.094201, 1.235844, 1.416117, 1.545253, 0.705493, 0.042560, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.028100, 0.311634, 0.731502, 0.825739, 0.896482, 0.969648, 1.108541, 1.268656, 1.414802, 1.553811, 1.720650, 1.820343, 0.767443, 0.047033, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.014971, 0.157799, 0.462711, 0.779549, 0.857910, 0.932256, 1.061261, 1.178198, 1.255201, 1.310401, 1.388918, 0.862372, 0.320394, 0.020471, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.036979, 0.431900, 0.979962, 1.107152, 1.201806, 1.299387, 1.482627, 1.697667, 1.897652, 2.088799, 2.316634, 2.454102, 1.112896, 0.073685, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.029025, 0.362530, 0.905506, 1.052697, 1.170136, 1.285600, 1.469755, 1.676671, 1.858427, 2.018814, 2.203459, 2.298769, 0.984018, 0.067082, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.019921, 0.212208, 0.551424, 0.574509, 0.581873, 0.597045, 0.679077, 0.777679, 0.870572, 0.968688, 1.106548, 1.179078, 0.466979, 0.034719, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.023890, 0.280071, 0.630100, 0.671956, 0.692843, 0.721376, 0.820110, 0.947255, 1.073862, 1.206391, 1.380559, 1.506587, 0.707955, 0.054282, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.020303, 0.279074, 0.705126, 0.815964, 0.902188, 0.987095, 1.127130, 1.289925, 1.435536, 1.565160, 1.719000, 1.803714, 0.817901, 0.063381, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.020309, 0.263254, 0.641989, 0.700789, 0.737320, 0.778215, 0.883579, 1.015004, 1.140577, 1.265023, 1.427571, 1.539198, 0.711205, 0.058961, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.022660, 0.336838, 0.848942, 0.979801, 1.079975, 1.178283, 1.342051, 1.535591, 1.710912, 1.867724, 2.055566, 2.161912, 1.035222, 0.087593, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.009341, 0.129130, 0.398999, 0.782069, 0.866106, 0.943600, 1.069814, 1.185157, 1.256620, 1.297799, 1.365144, 0.807904, 0.311499, 0.027762, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.082733, 0.374111, 0.447038, 0.449509, 0.463578, 0.541722, 0.691266, 0.856508, 1.027922, 1.264538, 1.383235, 0.432630, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.078050, 0.448992, 0.563849, 0.652338, 0.745780, 0.887485, 1.112200, 1.347650, 1.568649, 1.842872, 2.042398, 0.674957, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.075015, 0.427148, 0.525259, 0.598109, 0.676162, 0.802293, 1.010110, 1.231430, 1.442801, 1.709900, 1.909782, 0.657043, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.072593, 0.391101, 0.487605, 0.533554, 0.585712, 0.688936, 0.869507, 1.063695, 1.252645, 1.501382, 1.695300, 0.569478, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.021672, 0.101073, 0.230317, 0.385199, 0.537425, 0.626360, 0.716458, 0.769861, 0.637429, 0.464859, 0.255831, 0.078775, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.065722, 0.327517, 0.390952, 0.393275, 0.404436, 0.469199, 0.605467, 0.759301, 0.917279, 1.139363, 1.325189, 0.463366, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.055579, 0.248442, 0.321310, 0.292731, 0.275053, 0.312967, 0.409072, 0.518134, 0.633415, 0.810730, 0.872989, 0.297814, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.065610, 0.329787, 0.370544, 0.358303, 0.356152, 0.409969, 0.540590, 0.694279, 0.856725, 1.089619, 1.290478, 0.501912, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.064849, 0.364043, 0.441091, 0.459871, 0.485287, 0.562640, 0.723330, 0.904377, 1.085866, 1.337865, 1.546627, 0.613082, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.058151, 0.382345, 0.570705, 0.656836, 0.743962, 0.873098, 1.088538, 1.308972, 1.504870, 1.762014, 1.953066, 0.705275, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.060578, 0.355758, 0.463448, 0.485621, 0.513096, 0.591569, 0.755680, 0.937549, 1.115314, 1.366295, 1.573991, 0.626889, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.053755, 0.326351, 0.442136, 0.466602, 0.495141, 0.570027, 0.726336, 0.897834, 1.062704, 1.297144, 1.490608, 0.596944, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.029524, 0.237198, 0.653654, 0.824535, 0.991268, 1.175693, 1.422850, 1.630137, 1.764437, 1.924180, 1.426712, 0.468898, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.031111, 0.178328, 0.419522, 0.461537, 0.485876, 0.549331, 0.661707, 0.759843, 0.831871, 0.961266, 0.690188, 0.243202, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.031829, 0.196423, 0.445582, 0.478028, 0.510512, 0.579338, 0.704364, 0.818189, 0.904525, 1.049032, 0.863233, 0.307348, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.034796, 0.287130, 0.613935, 0.740991, 0.863412, 1.011066, 1.239785, 1.451270, 1.615410, 1.818674, 1.860181, 0.649832, 0.003129, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.036507, 0.323151, 0.577219, 0.693705, 0.806184, 0.943193, 1.175229, 1.404776, 1.602533, 1.841236, 2.018034, 0.847697, 0.009481, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.032170, 0.291979, 0.640425, 0.779516, 0.912701, 1.066439, 1.310974, 1.537207, 1.714939, 1.927632, 2.072672, 0.740838, 0.013058, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.034930, 0.328860, 0.579267, 0.687960, 0.791593, 0.918917, 1.150025, 1.382929, 1.589978, 1.841020, 2.035467, 0.942447, 0.023010, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.033685, 0.308428, 0.528973, 0.606510, 0.679550, 0.779372, 0.980018, 1.187261, 1.377125, 1.617528, 1.814561, 0.876236, 0.027628, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.027372, 0.231142, 0.485122, 0.536687, 0.584408, 0.660786, 0.818667, 0.972569, 1.102323, 1.282825, 1.434122, 0.562556, 0.021899, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.028824, 0.275711, 0.515803, 0.582039, 0.642931, 0.728635, 0.913891, 1.102600, 1.273453, 1.494230, 1.680344, 0.802717, 0.036791, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.031178, 0.361903, 0.774485, 0.939737, 1.094059, 1.270328, 1.565862, 1.857000, 2.104029, 2.388502, 2.604764, 1.217020, 0.063213, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.022510, 0.263555, 0.747976, 0.914122, 1.068763, 1.235349, 1.503626, 1.743354, 1.921792, 2.126731, 2.165949, 0.829355, 0.048897, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.009577, 0.099115, 0.304109, 0.607665, 0.838117, 0.958232, 1.136100, 1.258708, 1.309800, 1.077364, 0.640471, 0.242841, 0.016069, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.005991, 0.059267, 0.175159, 0.341737, 0.528357, 0.706078, 0.867330, 0.885434, 0.748714, 0.559872, 0.332645, 0.127686, 0.009461, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.018547, 0.194807, 0.460696, 0.496151, 0.525295, 0.574125, 0.716651, 0.856379, 0.978562, 1.146950, 1.301611, 0.601009, 0.050595, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.019315, 0.218943, 0.444922, 0.472425, 0.493139, 0.537338, 0.678331, 0.831828, 0.979506, 1.176744, 1.363212, 0.780322, 0.072054, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.014796, 0.235333, 0.584232, 0.726767, 0.856792, 1.000065, 1.226712, 1.463691, 1.669038, 1.889398, 2.064416, 1.180258, 0.112909, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.132259, 0.616264, 0.770507, 0.900646, 1.040808, 1.266117, 1.520066, 1.749799, 2.011321, 2.203462, 0.836269, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
                VPDeq.Add(new List<double> { 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.118960, 0.668895, 0.881783, 1.054414, 1.232393, 1.491362, 1.765394, 1.992671, 2.236328, 2.399503, 0.802535, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            
            #endregion

                double[] radInterceptedMaize = { 0.020078, 0.019994, 0.029815, 0.028403, 0.035930, 0.040719, 0.046815, 0.069821, 0.096029, 0.001736, 0.035761, 0.033718, 0.114087, 0.051011, 0.186957, 0.390612, 0.311076, 0.379087, 0.647567, 0.662112, 0.861553, 0.951313, 1.015723, 1.300963, 1.562746, 1.440804, 1.161569, 1.383140, 2.490003, 2.703288, 2.343445, 1.788758, 2.821378, 3.546071, 4.212373, 4.476039, 4.824688, 5.011591, 4.697183, 6.079928, 6.578909, 6.918456, 6.967230, 4.015988, 8.369484, 8.427036, 7.692851, 9.895314, 10.358410, 10.719347, 11.834748, 5.845027, 11.421946, 13.618049, 14.486352, 14.344953, 3.970440, 14.893362, 13.090834, 16.872017, 17.740669, 16.902744, 18.256588, 18.533074, 11.723337, 10.753523, 12.327165, 15.797786, 19.658781, 16.785794, 21.148981, 21.556037, 17.242938, 20.643049, 20.406379, 15.868155, 7.449100, 5.220120, 17.835451, 21.319504, 21.969163, 21.773317, 18.901891 };

            #endregion

            #region Outputs

            double[] LER6 = { 24.072189, 27.905164, 24.881531, 23.186729, 24.847560, 25.587303, 28.311645, 26.077204, 32.031905, 31.054017, 22.868831, 19.875040, 23.765322, 24.445637, 23.536081, 21.329642, 23.330460, 26.974190, 23.857843, 21.949992, 23.676385, 24.586849, 27.072800, 24.646601, 30.963679, 26.951033, 30.660881, 33.740700, 24.245694, 23.578694, 28.139160, 32.996197, 28.868720, 29.541305, 25.295118, 27.397426, 26.164149, 27.709661, 35.946068, 27.600622, 23.309805, 27.986682, 26.494115, 30.798448, 31.962966, 27.435387, 29.358793, 28.617895, 23.636252, 27.420996, 27.162295, 31.166348, 31.562443, 24.158282, 24.083161, 26.135025, 32.725724, 26.947033, 28.516953, 27.642714, 27.303831, 26.274133, 28.698938, 27.085936, 23.704158, 31.450759, 29.481667, 25.730238, 23.755453 };

            double[] LERCoeff = { 0.506013, 0.601677, 0.702342, 0.804853, 0.905455, 1.000000, 1.084216, 1.154023, 1.205856, 1.236971, 1.245679, 1.231502, 1.195218, 1.138785, 1.065171, 0.978091 };

            double[] InitTT = { 28.877719, 28.877719, 28.877719, 28.877719, 28.877719, 28.877719, 34.907131, 49.613013, 64.318895, 79.024778, 93.730660, 108.436542, 123.142425, 137.848307, 152.554190, 167.260072 };

            double[] TipTT = { 35.000000, 86.000000, 137.000000, 188.000000, 239.000000, 290.000000, 341.000000, 392.000000, 443.000000, 494.000000, 545.000000, 596.000000, 647.000000, 698.000000, 749.000000, 800.000000 };

            double[] LiguleTT = {256.000000,342.000000,428.000000,514.000000,600.000000,686.000000,772.000000,858.000000,912.069920,951.113920,990.157920,1029.201920,1068.245920,1107.289920,1146.333920,1185.377920};

            double[] StartExpTT = { 35.000000, 86.000000, 137.000000, 188.000000, 239.000000, 290.000000, 326.108000, 362.216000, 398.324000, 434.432000, 470.540000, 506.648000, 542.756000, 578.864000, 614.972000, 651.080000 };

            double[] StopExpTT = { 250.600000, 331.200000, 411.800000, 492.400000, 573.000000, 653.600000, 734.200000, 814.800000, 863.469920, 897.113920, 930.757920, 964.401920, 998.045920, 1031.689920, 1065.333920, 1065.333920 };

            double[] StartEnlTT = { 35.000000,86.000000,137.000000,188.000000,239.000000,290.000000,326.108000,362.216000,398.324000,434.432000,470.540000,506.648000,542.756000,578.864000,614.972000,651.080000 };

            double[] StopEnlTT = { 211.600000,292.200000,372.800000,453.400000,534.000000,614.600000,695.200000,775.800000,824.469920,858.113920,891.757920,925.401920,959.045920,992.689920,1026.333920,1026.333920};

            List<List<double>> length = new List<List<double>>();

            #region Valorize

            length.Add(new List<double> { 4.484222, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 18.604584, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 31.194950, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 42.927725, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 55.500902, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 68.448397, 11.562544, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 82.774443, 28.597018, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 95.969835, 44.287079, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 112.178380, 63.559950, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 127.892101, 82.244447, 15.973591, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 139.464016, 96.004103, 32.035333, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 149.521035, 107.962464, 45.994410, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 161.546585, 122.261518, 62.685795, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 173.916383, 136.969903, 79.854994, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 185.825935, 151.131029, 96.385374, 11.129941, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 196.619000, 163.964590, 111.366079, 28.297162, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 208.424505, 178.001998, 127.752043, 47.074747, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 222.073783, 194.231756, 146.697151, 68.784998, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 234.146150, 208.586478, 163.453518, 87.987049, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 245.253121, 221.793290, 178.869921, 105.653560, 12.065812, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 250.282570, 236.038834, 195.498842, 124.709564, 33.503712, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 250.282570, 250.832182, 212.767220, 144.498357, 55.765998, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 250.282570, 267.121271, 231.781587, 166.287974, 80.279199, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 250.282570, 281.950571, 249.091931, 186.124858, 102.595587, 5.734191, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 250.282570, 300.580714, 270.839025, 211.046060, 130.631805, 36.697870, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 250.282570, 316.796538, 289.767869, 232.737673, 155.034752, 63.648902, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 250.282570, 329.834058, 311.302296, 257.415167, 182.796800, 94.309783, 22.826193, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 250.282570, 329.834058, 334.999810, 284.571463, 213.347486, 128.050484, 59.408401, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 250.282570, 329.834058, 352.028581, 304.085677, 235.300871, 152.296178, 85.695971, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 250.282570, 329.834058, 368.588889, 323.063053, 256.650317, 175.874872, 111.260368, 26.948630, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 250.282570, 329.834058, 388.352205, 345.710933, 282.129060, 204.014032, 141.769296, 59.421857, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 250.282570, 329.834058, 411.526823, 372.268014, 312.005632, 237.010229, 177.544302, 97.500216, 0.998980, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 250.282570, 329.834058, 431.802540, 395.503083, 338.144959, 265.878949, 208.844231, 130.815372, 35.810506, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 419.279483, 364.893281, 295.420254, 240.873386, 164.906707, 71.433072, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 439.638329, 387.796873, 320.715372, 268.298759, 194.097846, 101.935347, 12.778564, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 461.689222, 412.604009, 348.112798, 298.003486, 225.715095, 134.972703, 46.668377, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 482.747510, 436.294469, 374.276947, 326.371076, 255.909115, 166.522905, 79.032663, 0.996840, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 505.049706, 461.384320, 401.986608, 356.414334, 287.886691, 199.936772, 113.308702, 35.514171, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 493.931867, 437.932677, 395.387638, 329.369268, 243.282562, 157.772935, 80.291418, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 518.922988, 465.533299, 425.312674, 361.221010, 276.564943, 191.914096, 114.672920, 16.566435, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 540.028968, 488.843104, 450.585538, 388.121053, 304.673216, 220.747641, 143.709445, 45.272515, 0.000000, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 565.369649, 516.829786, 480.929147, 420.418318, 338.421131, 255.366348, 178.571855, 79.738182, 5.352756, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 589.358878, 543.323901, 509.654490, 450.993126, 370.369224, 288.138791, 211.575006, 112.365747, 37.019005, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 574.122349, 543.046661, 486.535232, 407.507724, 326.235569, 249.939973, 150.294110, 73.829872, 0.000000, 0.000000, 0.000000 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 606.085315, 577.701421, 523.421218, 446.050465, 365.772822, 289.755554, 189.656578, 112.032593, 21.270941, 0.000000, 0.000000 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 633.520702, 607.447307, 555.082275, 479.133596, 399.709591, 323.931227, 223.443323, 144.823867, 52.513957, 0.000000, 0.000000 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 662.879495, 639.278580, 588.962987, 514.536080, 436.025558, 360.502847, 259.598747, 179.914033, 85.947320, 14.156665, 0.000000 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 691.497390, 670.306561, 621.988686, 549.045146, 471.425056, 396.151545, 294.841753, 214.118663, 118.536959, 44.639608, 0.000000 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 715.133642, 695.933363, 649.265456, 577.547067, 500.662407, 425.594717, 323.949853, 242.369143, 145.453576, 69.816250, 0.000000 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 725.663646, 680.909905, 610.612845, 534.581375, 459.752464, 357.718875, 275.143217, 176.680204, 99.024290, 23.844389 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 755.113442, 712.255809, 643.366667, 568.180338, 493.587952, 391.169306, 307.608088, 207.612227, 127.956771, 50.411583 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 788.904496, 748.222480, 680.948802, 606.732198, 532.411204, 429.550739, 344.858677, 243.104007, 161.154251, 80.895106 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 823.125002, 784.646254, 719.008570, 645.774015, 571.727863, 468.419963, 382.582684, 279.046854, 194.773639, 111.766045 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 849.317798, 812.525458, 748.139984, 675.657102, 601.821317, 498.170944, 411.457104, 306.557951, 220.506333, 135.395041 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 875.429147, 840.317971, 777.180814, 705.447267, 631.821195, 527.829415, 440.241738, 333.983502, 246.159010, 158.950562 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 870.478382, 808.695896, 737.775527, 664.377035, 560.014761, 471.478797, 363.745685, 273.997272, 184.512993 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 908.244608, 848.158414, 778.256289, 705.142768, 600.316568, 510.593179, 401.013259, 308.855754, 216.521727 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 939.342094, 880.652661, 811.588980, 738.710110, 633.501904, 542.800765, 431.700146, 337.558943, 242.878375 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 972.251304, 915.040007, 846.863616, 774.233067, 668.620601, 576.884749, 464.174834, 367.934366, 270.770549 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1004.151621, 948.373145, 881.056843, 808.667004, 702.662669, 609.923825, 495.653951, 397.378574, 297.807636 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1035.660860, 981.297639, 914.830882, 842.678800, 736.287402, 642.557862, 526.747153, 426.461814, 324.513265 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1012.980466, 947.331215, 875.407925, 768.644060, 673.961185, 556.667750, 454.448250, 350.211756 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1047.587259, 982.830961, 911.157577, 803.986871, 708.262680, 589.349680, 485.017518, 378.281928 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1080.249004, 1016.335470, 944.897947, 837.343266, 740.636286, 620.194747, 513.868663, 404.774436 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1108.832810, 1045.656819, 974.425708, 866.534993, 768.967928, 647.188694, 539.117637, 427.959257 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1084.560486, 1013.603244, 905.266677, 806.558448, 683.004357, 572.618062, 458.720959 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1121.028444, 1050.327924, 941.573420, 841.795474, 716.577646, 604.021069, 487.556709 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1152.855994, 1082.379530, 973.260270, 872.548724, 745.878864, 631.428164, 512.723222 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1111.971188, 1002.515166, 900.941675, 772.931225, 656.731775, 535.958214 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1144.189565, 1034.366888, 931.854940, 802.384902, 684.281474, 561.255672 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1064.965723, 961.552231, 830.680019, 710.747506, 585.558055 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1096.864972, 992.511623, 860.177645, 738.338313, 610.893261 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1131.745740, 1026.364688, 892.432318, 768.507943, 638.596465 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1059.002579, 923.529192, 797.594617, 665.305248 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1095.005939, 957.832633, 829.680576, 694.768118 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 993.292008, 862.847747, 725.223808 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1029.057092, 896.300863, 755.942068 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 928.827492, 785.809583 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 960.483679, 814.877816 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 990.834315, 842.747228 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            length.Add(new List<double> { 250.282570, 329.834058, 432.115760, 523.002702, 617.155879, 723.523279, 878.421934, 1054.732802, 1122.127035, 1153.820888, 1162.712749, 1136.194759, 1114.355761, 1051.652100, 997.950610, 849.281753 });
            #endregion

            List<List<double>> width = new List<List<double>>();

            #region Valorize

            width.Add(new List<double> { 31.107669, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.107477, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.122254, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.128042, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.138340, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.148823, 32.732209, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.160260, 32.746027, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.181873, 32.785397, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.211885, 32.834784, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.193148, 32.778924, 33.830686, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.191841, 32.767392, 33.907810, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.189979, 32.757832, 33.930431, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.216430, 32.796204, 34.032826, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.218678, 32.794278, 34.037074, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.261712, 32.854365, 34.142621, 35.659934, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.357069, 32.987458, 34.349902, 36.121552, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.419997, 33.068322, 34.460293, 36.155237, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.493063, 33.160462, 34.580410, 36.249158, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.622496, 33.326376, 34.798214, 36.548934, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.742282, 33.474563, 34.982412, 36.759773, 38.494288, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.893714, 33.660736, 35.211255, 37.039535, 38.946355, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.893714, 33.848942, 35.436192, 37.300220, 39.232681, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.893714, 34.032458, 35.649852, 37.535418, 39.448843, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.893714, 34.264713, 35.921229, 37.852886, 39.837157, 41.744987, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.893714, 34.533081, 36.232856, 38.220519, 40.293824, 42.338361, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.893714, 34.749565, 36.475304, 38.480812, 40.541044, 42.351885, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.893714, 34.888830, 36.620487, 38.603686, 40.568225, 42.042180, 41.133228, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.893714, 34.888830, 36.803253, 38.780754, 40.700972, 42.057249, 41.635457, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.893714, 34.888830, 37.218632, 39.268731, 41.308948, 42.903591, 43.475459, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.893714, 34.888830, 37.640494, 39.756142, 41.894282, 43.646249, 44.637184, 47.807616, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.893714, 34.888830, 37.949854, 40.090252, 42.246119, 43.999331, 45.007960, 46.991970, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.122985, 40.247540, 42.350399, 43.994552, 44.836048, 45.881895, 43.019794, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.476738, 40.634650, 42.774153, 44.458850, 45.381998, 46.497160, 45.360400, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 41.147314, 43.360425, 45.137392, 46.202120, 47.523374, 47.235693, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 41.754989, 44.062199, 45.954558, 47.175611, 48.710945, 48.928483, 53.053267, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 42.361752, 44.751722, 46.737951, 48.073933, 49.729965, 50.183213, 53.650909, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 42.984472, 45.452440, 47.522326, 48.952609, 50.691798, 51.283124, 54.376971, 54.586703, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 43.590603, 46.123992, 48.258604, 49.755447, 51.534034, 52.189816, 54.951825, 55.010350, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 46.657123, 48.813766, 50.325131, 52.065291, 52.691671, 55.011674, 54.676460, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 47.437977, 49.672346, 51.261178, 53.069814, 53.778496, 56.096315, 56.076626, 58.775095, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 48.250664, 50.561197, 52.223222, 54.095421, 54.874161, 57.194207, 57.369135, 59.906117, 0.000000, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.059608, 51.437500, 53.161216, 55.081648, 55.910548, 58.210036, 58.487354, 60.796218, 60.849119, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.810353, 52.237228, 54.001863, 55.942779, 56.792630, 59.024693, 59.317669, 61.296545, 60.959673, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 52.323698, 54.005830, 55.797162, 56.509857, 58.338522, 58.268035, 58.920949, 56.536871, 0.000000, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 53.299392, 55.048108, 56.903237, 57.677182, 59.571278, 59.644525, 60.626526, 59.259431, 65.512817, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 54.201585, 55.999203, 57.894533, 58.706258, 60.620316, 60.771807, 61.882067, 60.945148, 65.643269, 0.000000, 0.000000 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 54.889917, 56.701227, 58.590780, 59.398681, 61.251941, 61.391556, 62.407686, 61.514242, 64.577318, 60.384894, 0.000000 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 55.922562, 57.793272, 59.739237, 60.596965, 62.506511, 62.740054, 63.925888, 63.347095, 66.540467, 65.377142, 0.000000 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 56.956518, 58.881633, 60.877816, 61.778738, 63.733764, 64.042582, 65.350387, 64.984155, 68.138231, 67.741015, 0.000000 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 59.947474, 61.985877, 62.922233, 64.909876, 65.275909, 66.664636, 66.439230, 69.476114, 69.332013, 71.940090 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 61.130307, 63.223044, 64.204202, 66.245061, 66.681891, 68.181218, 68.108938, 71.154100, 71.297909, 74.468333 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 61.177792, 63.172050, 64.071059, 65.923371, 66.215038, 67.375755, 67.006572, 69.018414, 68.082939, 66.259946 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 62.158131, 64.178722, 65.099204, 66.966176, 67.290287, 68.491219, 68.194769, 70.166440, 69.398251, 68.476261 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 63.424005, 65.503088, 66.470800, 68.402483, 68.799156, 70.121665, 69.965988, 72.080427, 71.629194, 71.797183 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 64.738312, 66.876976, 67.892110, 69.889443, 70.356372, 71.794324, 71.765340, 74.004263, 73.801739, 74.667183 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 68.125353, 69.174074, 71.212088, 71.725815, 73.232494, 73.282045, 75.554042, 75.475674, 76.625610 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 67.604878, 68.548536, 70.374889, 70.725258, 71.898026, 71.669716, 73.247615, 72.569700, 72.215539 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 68.827788, 69.803306, 71.670674, 72.066444, 73.310200, 73.159852, 74.807623, 74.274492, 74.287401 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 69.696789, 70.676612, 72.535939, 72.935725, 74.172584, 74.030447, 75.614867, 75.088435, 75.127744 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 71.062673, 72.080771, 73.993928, 74.446789, 75.769090, 75.711578, 77.392540, 77.010484, 77.373603 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 72.466248, 73.522583, 75.489766, 75.994483, 77.399456, 77.421490, 79.192715, 78.938785, 79.573310 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 74.748840, 76.743094, 77.277025, 78.722893, 78.787668, 80.581839, 80.388636, 81.142401 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 76.090250, 78.121621, 78.691875, 80.191771, 80.308622, 82.147761, 82.028942, 82.925723 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.388344, 79.450026, 80.050429, 81.593274, 81.751815, 83.619761, 83.556625, 84.554830 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.702115, 79.696895, 80.250779, 81.699631, 81.788458, 83.481532, 83.298720, 84.050872 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 79.790944, 80.291223, 81.635276, 81.646310, 83.156029, 82.846781, 83.347587 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 80.095471, 80.559181, 81.830299, 81.789475, 83.168997, 82.777591, 83.118769 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 80.844834, 81.302063, 82.554405, 82.504757, 83.836447, 83.429848, 83.742115 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 82.530322, 83.813677, 83.794060, 85.150627, 84.786396, 85.178286 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 83.303265, 84.571570, 84.545336, 85.862786, 85.487223, 85.857478 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 85.900212, 85.905853, 87.254777, 86.923174, 87.374006 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 87.204250, 87.238120, 88.613244, 88.319642, 88.838893 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 87.856500, 87.876099, 89.203793, 88.888493, 89.367010 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 88.942498, 90.268766, 89.967206, 90.469432 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 89.914612, 91.230421, 90.934528, 91.445786 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 91.489057, 91.151586, 91.587844 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 90.575462, 90.123467, 90.356669 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 88.843833, 88.861966 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 89.374768, 89.373226 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 90.339012, 90.360997 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            width.Add(new List<double> { 31.893714, 34.888830, 38.933602, 44.091230, 49.965880, 57.974486, 65.943632, 73.669649, 77.872342, 82.051467, 84.597176, 88.911873, 90.243369, 89.418410, 91.332302, 91.379068 });
            
            #endregion

            List<List<double>> ExpArea = new List<List<double>>();

            #region Valorize

            ExpArea.Add(new List<double> { 1.106215, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 17.823728, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 58.168446, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 119.497779, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 207.590214, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 327.855821, 6.476745, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 483.811192, 37.175400, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 683.070360, 98.171058, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 960.712664, 206.797171, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 1303.066496, 363.768763, 10.147007, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 1603.366601, 511.866272, 40.909549, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 1877.445142, 656.639234, 83.712530, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 2178.425318, 824.576376, 144.329767, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 2556.647669, 1046.961273, 238.470681, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 2958.523782, 1287.605342, 349.717878, 3.147427, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 3391.198503, 1556.057857, 484.829087, 23.599068, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 3882.157347, 1868.002795, 651.741505, 66.010323, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 4450.366634, 2244.341985, 864.756099, 138.072694, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5013.932848, 2684.243976, 1126.075405, 244.460830, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5571.672620, 3153.708840, 1412.900191, 375.095006, 4.401298, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 3684.668155, 1748.577916, 542.976667, 33.101579, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 4290.303432, 2143.150538, 755.403047, 93.241109, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 4970.029027, 2596.601764, 1014.106251, 188.613211, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 5744.105461, 3126.294720, 1331.785549, 327.213739, 0.908542, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 6720.682758, 3814.962259, 1763.622244, 541.177847, 33.510471, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 7613.042969, 4572.050554, 2254.164852, 806.325627, 111.948203, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8394.529185, 5400.104006, 2806.183174, 1124.783542, 236.387252, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 6338.822350, 3452.718320, 1520.695830, 419.885037, 19.593608, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 7331.901336, 4148.097278, 1962.664165, 647.713845, 93.856939, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 8362.712694, 4877.975753, 2438.305149, 909.590559, 202.215492, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 9468.568634, 5695.393555, 2989.470691, 1233.157066, 357.098677, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 10579.081758, 6648.417921, 3650.790358, 1642.338886, 575.622033, 32.770062, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 11757.835872, 7698.069551, 4392.844383, 2118.313266, 852.330259, 133.440924, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12525.659956, 8945.512343, 5293.046138, 2716.067369, 1222.640790, 301.832123, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 10288.540990, 6274.254213, 3383.219569, 1655.797774, 528.127727, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 11898.260961, 7472.414407, 4221.185265, 2223.211656, 854.715093, 104.873932, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 13508.868774, 8723.896912, 5108.717363, 2835.601586, 1224.960562, 272.111244, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 14974.076252, 10045.985606, 6065.342483, 3510.447124, 1650.637787, 490.608196, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 16433.005164, 11683.811855, 7280.195747, 4390.637915, 2231.519456, 823.071432, 37.710790, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 13542.373037, 8675.667485, 5427.434176, 2946.982169, 1276.498937, 267.087811, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 15448.262625, 10111.841080, 6500.659460, 3699.244297, 1774.908425, 553.473371, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 17569.560262, 11734.849990, 7729.461136, 4577.609090, 2378.203491, 924.659915, 0.917056, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 19512.133853, 13423.619373, 9022.020564, 5517.771508, 3046.770815, 1365.544634, 213.691831, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 21400.697327, 15183.018727, 10384.832308, 6527.590880, 3793.704437, 1887.304988, 506.889644, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 22297.610721, 17398.240670, 12113.757194, 7821.869164, 4760.005344, 2580.391500, 915.470468, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 19968.874402, 14153.866215, 9384.352178, 5969.206547, 3502.906510, 1535.192511, 174.831394, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 22703.643330, 16319.547970, 11044.657419, 7268.457443, 4510.294058, 2233.315403, 552.148008, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 25313.902890, 18555.796147, 12768.439887, 8627.670312, 5577.721078, 2986.254088, 981.353020, 0.000000, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 27744.193963, 20824.625284, 14538.480372, 10047.668286, 6722.392732, 3831.465074, 1512.703610, 54.987130, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 29597.997197, 23341.004266, 16510.843728, 11644.009645, 8023.040812, 4805.576062, 2145.117241, 381.187064, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 30681.349120, 26132.061063, 18718.007053, 13451.750843, 9521.134073, 5956.084075, 2928.624244, 830.802387, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 28976.041576, 20992.530179, 15357.739919, 11136.235586, 7243.511609, 3857.442419, 1433.225335, 0.000000, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 32411.541881, 23737.351208, 17649.688915, 13081.954082, 8790.862745, 4978.783794, 2157.826860, 219.848793, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 35543.471271, 26532.590809, 19998.928864, 15099.963714, 10425.088386, 6199.389631, 2991.342355, 690.940063, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 38648.975848, 29451.151106, 22462.270543, 17228.081195, 12161.606509, 7514.308408, 3907.656708, 1233.586181, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 40746.976402, 32548.012666, 25096.926227, 19523.411480, 14055.063866, 8972.447149, 4948.770828, 1881.027282, 0.000000, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 42023.588739, 35268.580729, 27459.122430, 21608.714550, 15814.419968, 10363.086459, 5988.538117, 2581.521397, 290.807621, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43273.507342, 38796.268364, 30494.952925, 24290.191635, 18067.167241, 12146.074357, 7313.683695, 3469.444639, 788.813079, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 42391.968591, 33611.674395, 27061.806474, 20417.954506, 14030.925279, 8741.535941, 4457.606385, 1381.766561, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 46201.458743, 37133.678196, 30207.665521, 23097.735480, 16197.212545, 10397.260340, 5622.153817, 2099.110742, 0.000000 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 50090.648936, 40964.379202, 33652.050920, 26057.045479, 18618.259764, 12278.528757, 6980.747586, 2976.795908, 267.071583 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 53471.793559, 44957.964979, 37265.114668, 29188.589553, 21209.181897, 14325.513068, 8496.516381, 4000.882986, 871.619697 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 55154.501418, 49520.403907, 41415.569054, 32807.686591, 24229.757310, 16736.059287, 10309.379205, 5253.685568, 1646.443727 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 56845.176385, 53941.959103, 45786.943691, 36643.589827, 27457.907848, 19341.980193, 12301.970750, 6668.204271, 2568.535750 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 58276.346585, 57337.733991, 49482.196426, 39916.509045, 30236.932253, 21622.633924, 14082.150910, 7981.619403, 3483.288552 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 58276.346585, 59848.131095, 53578.657274, 43595.308495, 33374.061653, 24201.772453, 16102.021602, 9472.530900, 4521.033878 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 58276.346585, 61643.493175, 57484.642714, 47574.749380, 36790.749938, 27035.263460, 18347.414263, 11157.696562, 5726.642316 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 58276.346585, 63386.804228, 61577.851101, 51828.900707, 40454.202767, 30084.258886, 20776.556454, 12993.700434, 7058.702699 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 58276.346585, 65231.846402, 64600.477513, 56417.167623, 44617.379842, 33570.268858, 23577.892654, 15133.222816, 8638.455734 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 58276.346585, 65536.994922, 66569.419153, 60631.027200, 48846.964964, 37131.386665, 26459.129423, 17356.047983, 10304.981956 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 58276.346585, 65536.994922, 68696.788970, 64839.217078, 53768.137925, 41297.984448, 29857.034619, 20000.852921, 12316.459447 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 58276.346585, 65536.994922, 70759.858709, 67040.256431, 58546.214639, 45787.885056, 33536.514793, 22882.363998, 14530.416483 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 58276.346585, 65536.994922, 71004.522036, 69218.630143, 63122.657391, 50307.352332, 37269.392907, 25838.544955, 16835.942833 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 58276.346585, 65536.994922, 71004.522036, 71370.901559, 66403.499024, 55117.994499, 41392.655748, 29118.592068, 19414.275545 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 58276.346585, 65536.994922, 71004.522036, 73583.950982, 68739.102347, 59955.695270, 45961.631284, 32779.089639, 22320.283809 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 58276.346585, 65536.994922, 71004.522036, 73771.661495, 71773.572852, 64344.710529, 51200.229323, 37054.305520, 25793.192276 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 58276.346585, 65536.994922, 71004.522036, 73771.661495, 74676.870117, 67316.874674, 55504.793924, 41098.636835, 29114.616286 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 58276.346585, 65536.994922, 71004.522036, 73771.661495, 75765.903184, 69718.283850, 58310.064744, 44642.880358, 32028.343190 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 58276.346585, 65536.994922, 71004.522036, 73771.661495, 75765.903184, 71844.850897, 60356.714907, 48491.542119, 35187.571460 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 58276.346585, 65536.994922, 71004.522036, 73771.661495, 75765.903184, 74225.293349, 62647.699779, 52809.875042, 38763.573676 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 58276.346585, 65536.994922, 71004.522036, 73771.661495, 75765.903184, 75422.413400, 64916.286139, 56038.968578, 41492.642508 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 58276.346585, 65536.994922, 71004.522036, 73771.661495, 75765.903184, 75422.413400, 67150.161670, 58269.296861, 43450.597342 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 58276.346585, 65536.994922, 71004.522036, 73771.661495, 75765.903184, 75422.413400, 69193.482420, 60309.372950, 45241.534072 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 58276.346585, 65536.994922, 71004.522036, 73771.661495, 75765.903184, 75422.413400, 70527.794190, 62512.428732, 47175.546994 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 58276.346585, 65536.994922, 71004.522036, 73771.661495, 75765.903184, 75422.413400, 70527.794190, 65057.785533, 49410.058251 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 58276.346585, 65536.994922, 71004.522036, 73771.661495, 75765.903184, 75422.413400, 70527.794190, 67468.826440, 51526.656616 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 58276.346585, 65536.994922, 71004.522036, 73771.661495, 75765.903184, 75422.413400, 70527.794190, 68358.844764, 53988.800201 });
            ExpArea.Add(new List<double> { 5986.830526, 8630.643364, 12617.867345, 17294.874350, 23127.552502, 31459.417770, 43444.749426, 58276.346585, 65536.994922, 71004.522036, 73771.661495, 75765.903184, 75422.413400, 70527.794190, 68358.844764, 56333.032552 });
            
            #endregion


            double[] dltLai = { 0.000008, 0.000125, 0.000303, 0.000460, 0.000661, 0.000951, 0.001400, 0.001952, 0.002897, 0.003821, 0.003594, 0.003462, 0.003972, 0.005211, 0.005677, 0.006425, 0.007592, 0.009222, 0.010284, 0.010868, 0.011088, 0.009546, 0.011154, 0.013207, 0.017577, 0.018627, 0.019533, 0.018153, 0.018244, 0.019549, 0.022147, 0.025390, 0.028679, 0.030389, 0.028073, 0.034835, 0.036746, 0.037972, 0.046071, 0.049132, 0.044643, 0.051202, 0.053897, 0.056869, 0.061525, 0.074471, 0.074571, 0.076343, 0.078490, 0.083792, 0.088283, 0.091772, 0.105233, 0.108404, 0.113444, 0.113737, 0.102193, 0.129313, 0.126749, 0.141458, 0.156969, 0.164262, 0.174647, 0.183621, 0.156474, 0.154128, 0.158004, 0.168002, 0.177193, 0.157869, 0.176081, 0.167303, 0.153851, 0.151690, 0.153914, 0.154484, 0.131593, 0.095653, 0.083858, 0.094243, 0.070679, 0.048166, 0.044058, 0.041035, 0.035849, 0.033957, 0.025141, 0.017582 };

            #endregion

            #region Call Component

            #region Instantiation of other inputs

            //Cumulative shoot thermal time
            double cumulTTPhenoMaize = 28.8777189;//Add TT from sowing to flag leaf

            bool HasNewLeafAppeared = false;

            double finalLeafNumber = 0;

            double previousLeafNumber = 0.0;

            #endregion

            for (int iday = 0; iday < deltaTTPhenoMaize.Length; iday++)
            {
                #region Calculation of other inputs for the component

                cumulTTPhenoMaize += deltaTTPhenoMaize[iday];

                finalLeafNumber = Nfinal;

                double nl = 0.0;

                for (int il = 0; il < length[iday].Count; il++) if (length[iday][il] > 0.0) nl++;

                    leafNumber[iday] = nl;

                #endregion

                #region Create Leaf Layer

                if (iday - 1 >= 0) previousLeafNumber = leafNumber[iday - 1];
                else previousLeafNumber = 0.0;

                HasNewLeafAppeared = false;

                if (finalLeafNumber > 0)
                {
                    // final number of phytomer is known.
                    if (leafNumber[iday] <= finalLeafNumber)
                    {
                        bool CreateOrNot = false;
                        if (leafNumber[iday] > 0) CreateOrNot = true;

                        // a leaf Layer is growing, do nothing.
                        if (Math.Ceiling(previousLeafNumber) == Math.Ceiling(leafNumber[iday]) && (previousLeafNumber > 0)) CreateOrNot = false;
                        //if (Math.Floor(previousLeafNumber) == Math.Floor(leafNumber[iday]) && (previousLeafNumber > 0)) CreateOrNot = false;

                        if (CreateOrNot)
                        {
                            //Create a leaf layer for the component
                            CreateLeafLayerLAIComponentMaize();

                            HasNewLeafAppeared = true;
                        }
                    }
                }
                else
                {
                    bool CreateOrNot = false;
                    if (leafNumber[iday] > 0) { CreateOrNot = true; }

                    // a leaf Layer is growing, do nothing.
                    if ((Math.Ceiling(previousLeafNumber) == Math.Ceiling(leafNumber[iday])) && (previousLeafNumber > 0)) CreateOrNot = false;
                    //if ((Math.Floor(previousLeafNumber) == Math.Floor(leafNumber[iday])) && (previousLeafNumber > 0)) CreateOrNot = false;

                    if (CreateOrNot)
                    {

                        //Create a leaf layer for the component
                        CreateLeafLayerLAIComponentMaize();

                        HasNewLeafAppeared = true;
                    }
                }
                #endregion

                #region Estimate

                maizeLaistate_.newLeafHasAppeared = HasNewLeafAppeared ? 1 : 0;
                maizeLaistate_.finalLeafNumber = finalLeafNumber;
                maizeLaistate_.leafNumber = leafNumber[iday];
                maizeLaistate_.FPAW = FPAW[iday];
                maizeLaistate_.cumulTTPHenoMaize = cumulTTPhenoMaize;
                maizeLaistate_.deltaTTPhenoMaize = deltaTTPhenoMaize[iday];
                maizeLaistate_.VPDairCanopy = VPDairCanopy[iday];
                maizeLaistate_.TCanopyHourly = TCanopyHourly[iday].ToArray();
                maizeLaistate_.VPDeq = VPDeq[iday].ToArray();
                maizeLaistate_.previousLeafNumber = previousLeafNumber;
                maizeLaistate_.radIntercepted = radInterceptedMaize[iday];


                maizeLAI_.Estimate(maizeLaistate_, maizeLeafstate_, maizeLeafstate1_, null);

                for (int ilayer = 0; ilayer < maizeLeafstate_.State.Count; ilayer++)
                {

                    maizeLeafstate_.GAI[ilayer] = maizeLeafstate1_.exposedArea[ilayer] * plantDensity / 1000000;
                    maizeLeafstate_.length[ilayer] = maizeLeafstate1_.length[ilayer];
                    maizeLeafstate_.exposedArea[ilayer] = maizeLeafstate1_.exposedArea[ilayer];

                    maizeLeafstate_.leafAge[ilayer] = maizeLeafstate1_.leafAge[ilayer];
                    maizeLeafstate_.cumIntRad[ilayer] = maizeLeafstate1_.cumIntRad[ilayer];


                }

                #endregion

                #region Tests

                Assert.AreEqual(LER6[iday], maizeLaistate_.LER, 0.05);

                for (int ileaf = 0; ileaf < maizeLeafstate_.coefLER.Count; ileaf++) Assert.AreEqual(LERCoeff[ileaf], maizeLeafstate_.coefLER[ileaf], 0.005);
                Assert.IsTrue(maizeLeafstate_.initialisationTT.Count <= LERCoeff.Length);
                if (iday == leafNumber.Length - 1) Assert.IsTrue(maizeLeafstate_.coefLER.Count == LERCoeff.Length);

               for (int ileaf = 0; ileaf < maizeLeafstate_.initialisationTT.Count; ileaf++) Assert.AreEqual(InitTT[ileaf], maizeLeafstate_.initialisationTT[ileaf], 0.05);
               Assert.IsTrue(maizeLeafstate_.initialisationTT.Count <= InitTT.Length);
               if (iday == leafNumber.Length - 1) Assert.IsTrue(maizeLeafstate_.initialisationTT.Count == InitTT.Length);

                for (int ileaf = 0; ileaf < maizeLeafstate_.tipTT.Count; ileaf++) Assert.AreEqual(TipTT[ileaf], maizeLeafstate_.tipTT[ileaf], 0.05);
                Assert.IsTrue(maizeLeafstate_.tipTT.Count <= TipTT.Length);
                if (iday == leafNumber.Length - 1) Assert.IsTrue(maizeLeafstate_.tipTT.Count == TipTT.Length);

                for (int ileaf = 0; ileaf < maizeLeafstate_.liguleTT.Count; ileaf++) Assert.AreEqual(LiguleTT[ileaf], maizeLeafstate_.liguleTT[ileaf], 0.05);
                Assert.IsTrue(maizeLeafstate_.liguleTT.Count <= StartExpTT.Length);
                if (iday == leafNumber.Length - 1) Assert.IsTrue(maizeLeafstate_.liguleTT.Count == LiguleTT.Length);

                for (int ileaf = 0; ileaf < maizeLeafstate_.startExpTT.Count; ileaf++) Assert.AreEqual(StartExpTT[ileaf], maizeLeafstate_.startExpTT[ileaf], 0.05);
                Assert.IsTrue(maizeLeafstate_.startExpTT.Count <= StartExpTT.Length);
                if (iday == leafNumber.Length - 1) Assert.IsTrue(maizeLeafstate_.startExpTT.Count == StartExpTT.Length);

                for (int ileaf = 0; ileaf < maizeLeafstate_.fullyExpTT.Count; ileaf++) Assert.AreEqual(StopExpTT[ileaf], maizeLeafstate_.fullyExpTT[ileaf], 0.05);
                Assert.IsTrue(maizeLeafstate_.fullyExpTT.Count <= StopExpTT.Length);
                if (iday == leafNumber.Length - 1) Assert.IsTrue(maizeLeafstate_.fullyExpTT.Count == StopExpTT.Length);

                for (int ileaf = 0; ileaf < maizeLeafstate_.startEnlargeTT.Count; ileaf++) Assert.AreEqual(StartEnlTT[ileaf], maizeLeafstate_.startEnlargeTT[ileaf], 0.05);
                Assert.IsTrue(maizeLeafstate_.startEnlargeTT.Count <= StartEnlTT.Length);
                if (iday == leafNumber.Length - 1) Assert.IsTrue(maizeLeafstate_.startEnlargeTT.Count == StartEnlTT.Length);

                for (int ileaf = 0; ileaf < maizeLeafstate_.stopEnlargeTT.Count; ileaf++) Assert.AreEqual(StopEnlTT[ileaf], maizeLeafstate_.stopEnlargeTT[ileaf], 0.05);
                Assert.IsTrue(maizeLeafstate_.stopEnlargeTT.Count <= StopEnlTT.Length);
                if (iday == leafNumber.Length - 1) Assert.IsTrue(maizeLeafstate_.stopEnlargeTT.Count == StopEnlTT.Length);

               for (int ileaf = 0; ileaf < maizeLeafstate_.length.Count; ileaf++) Assert.AreEqual(length[iday][ileaf], maizeLeafstate_.length[ileaf], 0.05);

               for (int ileaf = 0; ileaf < maizeLeafstate_.width.Count; ileaf++) Assert.AreEqual(width[iday][ileaf], maizeLeafstate_.width[ileaf], 0.05);

               for (int ileaf = 0; ileaf < maizeLeafstate_.exposedArea.Count; ileaf++) Assert.AreEqual(ExpArea[iday][ileaf], maizeLeafstate_.exposedArea[ileaf], 0.05);

               Assert.AreEqual(dltLai[iday], maizeLaistate_.potentialIncDeltaArea, 0.00001);

                

                #endregion
            }

            #endregion

        }

        #region Utilities

        public void CreateLeafLayerLAIComponentMaize()
        {

            maizeLeafstate_.State.Add(0);
            maizeLeafstate_.liguleTT.Add(0.0);
            maizeLeafstate_.fullyExpTT.Add(0.0);
            maizeLeafstate_.GAI.Add(0.0);
            maizeLeafstate_.length.Add(0.0);
            maizeLeafstate_.width.Add(0.0);
            maizeLeafstate_.fracPopn.Add(0.0);
            maizeLeafstate_.startExpTT.Add(0.0);
            maizeLeafstate_.baseWidth.Add(0.0);
            maizeLeafstate_.coefLER.Add(0.0);
            maizeLeafstate_.tipTT.Add(0.0);
            maizeLeafstate_.exposedArea.Add(0.0);
            maizeLeafstate_.PreviousState.Add(0);
            maizeLeafstate_.leafAge.Add(0.0);
            maizeLeafstate_.cumIntRad.Add(0.0);
            maizeLeafstate_.initialisationTT.Add(0.0);
            maizeLeafstate_.stopEnlargeTT.Add(0.0);
            maizeLeafstate_.startEnlargeTT.Add(0.0);

            maizeLeafstate1_.width.Add(0.0);
            maizeLeafstate1_.length.Add(0.0);
            maizeLeafstate1_.State.Add(0);
            maizeLeafstate1_.exposedArea.Add(0.0);
            maizeLeafstate1_.leafAge.Add(0.0);
            maizeLeafstate1_.cumIntRad.Add(0.0);

            maizeLeafstate1_.MaxAI.Add(0.0);
            maizeLeafstate1_.deltaAI.Add(0.0);
            maizeLeafstate1_.LaminaAI.Add(0.0);
            maizeLeafstate1_.area.Add(0.0);

            maizeLeafstate_.MaxAI.Add(0.0);
            maizeLeafstate_.deltaAI.Add(0.0);
            maizeLeafstate_.LaminaAI.Add(0.0);
            maizeLeafstate_.area.Add(0.0);


        }


        #endregion

    }


}
